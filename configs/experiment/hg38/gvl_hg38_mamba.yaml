# @package _global_
defaults:
  - /pipeline: hg38
  - override /scheduler: cosine_warmup_timm

model:
  _name_: lm_mamba
  #class: mamba_ssm.models.mixer_seq_simple.MambaLMHeadModel
  config:
    d_model: 512
    n_layer: 24
    vocab_size: 12
    rms_norm: True
    residual_in_fp32: True
    fused_add_norm: True
    pad_vocab_size_multiple: 8
    ssm_cfg: {}

task:
  _name_: lm_mamba

trainer:
  accelerator: gpu
  devices: 8
  num_nodes: 1
  accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  max_epochs: 1000
  max_steps: 20000
  precision: bf16  # bf16 only a100
  gradient_clip_val: 1.0
  # strategy: null

dataset:
  _name_: fasta
  batch_size: 1
  max_length: 65536
  fasta: /cellar/users/dlaub/projects/HyenaDNA_collab/data/human/hg38.ml.fa
  bed: /cellar/users/dlaub/projects/HyenaDNA_collab/data/human/sequences.bed
  max_memory_gb: 64
  __train_len: ${div_up:1_000_000_000, ${.max_length}}


scheduler:
  t_in_epochs: False
  t_initial: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  warmup_lr_init: 1e-6
  warmup_t: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs} * 0.01}
  lr_min: ${eval:0.1 * ${optimizer.lr}}

optimizer:
  lr: 8e-3
  weight_decay: 0.1 
  betas:
    - 0.9
    - 0.95

train:
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: 256
